Проект Арбитражный ботсинхронный

00:00 Введение и приветствие

• Начало записи, монтажер может убрать лишнее.
• Обсуждение количества просмотров и участников.
• Приветствие участников и ожидание их подключения.

01:08 Вопросы и ответы

• Вопрос о способе авторизации через MetaMask.
• Обсуждение проблем с подключением через Ledger и использование обычного кошелька.
• Вопрос о возможности импорта данных в Rabi или Matic.

02:57 Проблемы с ботом и саппортом

• Вопрос о боте, который присылает уведомления.
• Обсуждение проблем с регистрацией в боте и саппорте.
• Вопрос о лагах при выполнении домашнего задания.

04:18 Начало работы над задачей

• Начало работы над домашним заданием.
• Обсуждение качества демонстрации и отсутствия лагов.
• План разбора задачи и логики построения бота.

06:00 Постановка задачи

• Получение максимального количества одинаковых токенов с бирж.
• Рассмотрение двух бирж: Coinbase и Binance.
• Определение методов API для работы с данными.

06:40 Работа с API

• Поиск методов API для получения данных с бирж.
• Описание методов для получения данных с Coinbase и Binance.
• Подготовка к написанию кода для отправки запросов.

09:37 Написание кода

• Начало написания кода в стиле функционального программирования.
• Создание функций для отправки запросов GET и POST.
• Обработка ошибок и создание заглушек для обработки исключений.

14:05 Запись данных в JSON

• Написание функции для записи данных в JSON.
• Использование библиотеки JSON для работы с файлами.
• Подготовка данных для записи в файл.

19:37 Проблемы с интерпретатором и создание файла

• Возникла ошибка с интерпретатором, но проблема не ясна.
• Создан файл с названием биржи и данными по маркету.
• Перенос функции наверх для дальнейшей работы.

20:48 Логика программы и переменные API

• Начало проработки логики программы.
• Создание переменных API для бирж Binance и Coinbase.
• Копирование и вставка ссылок на API.

23:19 Использование библиотек и скорость запросов

• Рассмотрение использования готовых библиотек для запросов.
• Преимущества и недостатки использования библиотек.
• Решение использовать прямые запросы для повышения скорости.

25:03 Обучение и развитие навыков

• Важность обучения и развития навыков работы с запросами.
• Использование готовых решений для обучения.
• Продолжение работы с запросами и логикой программы.

28:22 Создание переменных и отправка запросов

• Создание переменных для хранения данных с бирж.
• Отправка запросов и получение ответов.
• Преобразование ответов в JSON для дальнейшей работы.

32:32 Запись данных в JSON и анализ

• Запись данных в JSON файлы для анализа.
• Использование метода dump для улучшения читаемости JSON.
• Анализ данных и получение списков и словарей для дальнейшей работы.

36:09 Работа с данными

• Запуск программы с двумя списками в файлах.
• Анализ данных из Binance и Kucoin.
• Определение символов и цен для работы.

36:41 Анализ данных

• Изучение символов и цен в данных.
• Понимание параметров и переменных.
• Определение текущей цены и таймфрейма.

39:24 Создание функции

• Написание функции для обработки данных.
• Перебор тикетов и бирж.
• Обработка ошибок и ключей.

42:14 Запись данных

• Запись данных в JSON.
• Использование JSON для хранения и обработки данных.
• Сравнение цен и создание словаря.

48:15 Фильтрация символов

• Фильтрация символов для сравнения.
• Использование ключей для определения тикетов.
• Запись символов в словарь.

50:54 Работа с файлами

• Открытие файла для чтения данных.
• Создание переменной для работы с JSON.
• Обработка ошибок при создании файла.

52:03 Обработка ошибок при чтении файла

• Открытие пустого файла на чтение.
• Обработка ошибки при попытке закодировать JSON.
• Импорт библиотеки для обработки ошибок.

53:16 Обработка ошибок при отсутствии файла

• Обработка ошибки при отсутствии файла.
• Создание списка для хранения данных.
• Запись данных в список по ключу "символ".

54:37 Преобразование символов для соответствия биржам

• Удаление тире из символов для соответствия биржам.
• Запись символов и цен в словарь.
• Создание списка словарей с символами и ценами.

57:53 Объединение данных для двух бирж

• Запись данных в файл с помощью JSON.
• Создание файла с данными для двух бирж.
• Объединение данных в один словарь.

01:01:20 Создание словаря для объединения данных

• Создание двух словарей для хранения данных.
• Передача данных в функцию для объединения.
• Использование метода default для создания ключей в словаре.

01:06:38 Обработка данных из файла

• Открытие файла с данными.
• Распаковка словаря для доступа к ключам и значениям.
• Создание нового словаря для объединения данных.

01:08:53 Запись данных в финальный словарь

• Запись данных из первого списка в финальный словарь.
• Запись данных в цикле для объединения.
• Создание финального словаря для хранения объединенных данных.

01:10:05 Запись данных в словарь

• Запись символа и тикета в словарь.
• Использование ключа для записи цены.
• Проверка результата через принт.

01:11:04 Проблемы с логикой

• Запуск функции и проверка результата.
• Обнаружение проблемы с логикой.
• Перестройка логики для добавления цен с каждой биржи.

01:12:18 Работа с словарем

• Создание словаря для хранения данных.
• Использование метода setdefault для добавления значений.
• Проверка и исправление ошибок.

01:14:13 Проблемы с тикетами

• Обнаружение проблем с тикетами на разных биржах.
• Предложение по логике обработки данных.
• Исправление ошибок и проверка результатов.

01:20:14 Пересечение тикетов

• Создание списка тикетов, общих для двух бирж.
• Использование пересечений для получения общих тикетов.
• Проверка и исправление ошибок в логике.

01:27:14 Финальная обработка данных

• Печать тикетов и цен.
• Сравнение данных с двух бирж.
• Подготовка данных для дальнейшего анализа.

01:29:05 Работа с ценами на биржах

• Обсуждение работы с ценами на биржах Binance и Coinbase.
• Создание списка пар с ценами на нескольких биржах.
• Нахождение минимальной и максимальной цены для каждой пары.

01:32:14 Сортировка данных

• Использование лямбда-функции для сортировки данных по ключу.
• Объяснение работы метода sort в Python.
• Сортировка данных по значению, а не по ключу.

01:34:32 Определение направления торговли

• Обсуждение методов определения направления торговли.
• Пример с вычитанием цен для определения знака спреда.
• Уточнение, что если спред отрицательный, то нужно торговать в обратном направлении.

01:36:11 Расчет спреда

• Создание функции для расчета спреда.
• Пример расчета спреда для пары Binance и Coinbase.
• Обсуждение необходимости округления и форматирования данных.

01:44:10 Тестирование и исправление ошибок

• Запуск программы и проверка результатов.
• Исправление ошибок в расчете спреда.
• Уточнение, что спред должен быть в процентах, а не в абсолютных значениях.

01:46:03 Обсуждение финансовых расчетов

• Обсуждение умножения на 100 в скобках.
• Различие между покупкой и продажей на основе разницы цен.
• Проверка на отрицательные значения для определения направления сделки.

01:47:03 Проблемы с расчетами и их решение

• Обсуждение необходимости деления на большее число для определения покупки.
• Различие в расчетах для положительных и отрицательных значений.
• Проверка корректности расчетов и исправление ошибок.

01:49:39 Проверка цен на биржах

• Проверка цен на биржах для определения корректности расчетов.
• Проблемы с нулевыми значениями цен на некоторых биржах.
• Обработка ошибок и проверка корректности данных.

01:52:44 Обработка ошибок и списочные выражения

• Обработка ошибок при делении на ноль.
• Использование списочных выражений для проверки цен.
• Преимущества списочных выражений перед циклами.

01:56:47 Преимущества списочных выражений

• Списочные выражения позволяют применять выражения к каждому элементу списка.
• Преимущества использования списочных выражений для компактного кода.
• Пример использования списочных выражений для проверки нулевых значений.

01:59:42 Инициализация цикла

• Объяснение инициализации цикла и применения значений к переменным.
• Пример использования списочных выражений для сокращения кода и улучшения читаемости.
• Списочные выражения позволяют применять выражения к элементам цикла.

02:00:42 Проверка и добавление элементов

• Списочные выражения помогают сокращать код и делать его более читаемым.
• Пример добавления элементов в список на основе проверки значений.
• Использование функции any для проверки наличия хотя бы одного элемента с булевым значением true.

02:04:08 Сортировка и улучшение кода

• Обсуждение сортировки данных по максимальному спреду.
• Возможность настройки логики для удаления мелких спредов.
• Планы по улучшению кода, включая создание ссылок на тикеты и использование софта для открытия тикетов на разных биржах.

02:06:38 Создание и сортировка списка

• Создание нового списка для сортировки данных.
• Добавление информации о спредах в словарь.
• Запись данных о покупке и продаже на разных биржах и округление спредов до двух знаков после запятой.
• Использование метода sort для сортировки списка по максимальному спреду.

02:09:48 Сортировка списка

• Использование метода sort для сортировки списка.
• Применение лямбда-функции для сортировки по ключу.
• Пример сортировки по ключу "спред" в словаре.

02:10:56 Реверс и финальный список

• Использование аргумента reverse для сортировки от большего к меньшему.
• Удаление лишних элементов из списка.
• Финальный список без лишних элементов.

02:13:11 Работа с тикетами

• Создание переменной для ключа тикета.
• Обращение по ключу для получения данных.
• Финальный принт списка с данными.

02:15:03 Проверка данных

• Проверка данных о спредах для различных токенов.
• Обнаружение странных спредов и их анализ.
• Проверка корректности данных и тикеров.

02:20:48 Улучшение кода

• Оптимизация кода для уменьшения количества запросов.
• Удаление ненужных функций и переменных.
• Проверка работы улучшенного кода.

02:24:42 Арбитражный бот

• Обсуждение реальности арбитражного бота.
• Влияние комиссий на арбитраж.
• Сложности и перспективы арбитража в текущих условиях.

02:27:30 Арбитраж на биржах

• Друзья используют множество бирж для арбитража.
• Недавно купили пиоку и перешли на койнекс, но были забанены.
• Для успешного арбитража нужен продуманный алгоритм и терпение.

02:28:38 Возможности для заработка

• Ночью открываются возможности для заработка на биржах.
• Важно иметь продуманный алгоритм и терпение.
• Первые деньги автор заработал на своем софте, используя быструю покупку и продажу.

02:29:36 Опыт и терпение

• Для успеха в арбитраже нужно набраться опыта и терпения.
• Важно найти стабильный круг направлений для заработка.
• Автор курса отвечает на вопросы в чате, но не постоянно.

02:31:10 Обратная связь и советы

• Автор курса делится опытом и советами по арбитражу.
• Важно понимать, как работать с алгоритмами и библиотеками.
• Рекомендуется сохранять записи и улучшать код для масштабируемости.

02:33:34 Заключение и анонс

• Автор подчеркивает важность написания проекта арбитража с нуля.
• Анонс следующего занятия будет скоро.
• Благодарности и прощание с аудиторией.

