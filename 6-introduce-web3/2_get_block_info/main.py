import asyncio
from web3 import AsyncWeb3
from web3.providers.async_rpc import AsyncHTTPProvider
from datetime import datetime


async def check_connection(w3_async_client):
    return await w3_async_client.is_connected()


def convert_timestamp_to_human(timestamp):
    human_readable_date = datetime.utcfromtimestamp(timestamp).strftime(
        "%Y-%m-%d %H:%M:%S"
    )
    return human_readable_date


def convert_hash_to_hex(hash_bytes):
    return "0x" + hash_bytes.hex()


async def input_valid_block_number(w3_async):
    while True:
        try:
            latest_block_number = await w3_async.eth.block_number
            block_number = int(input("üì£ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±–ª–æ–∫–∞ —Å–µ—Ç–∏ Ethereum: "))
            if 0 < block_number < latest_block_number:
                return block_number
            else:
                raise ValueError
        except ValueError:
            print(
                "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –±–ª–æ–∫–∞ —Å–µ—Ç–∏ Ethereum. "
                f"–¶–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ, –º–µ–Ω—å—à–µ —á–µ–º –Ω–æ–º–µ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–ª–æ–∫–∞ {latest_block_number}."
            )


async def main():

    w3_async = AsyncWeb3(AsyncHTTPProvider("https://eth.llamarpc.com"))

    if await check_connection(w3_async):
        block_number = await input_valid_block_number(w3_async)
        block_info = await w3_async.eth.get_block(block_number)
        timestamp = convert_timestamp_to_human(block_info["timestamp"])
        hash_hex = convert_hash_to_hex(block_info["hash"])
        transactions_number = len(block_info["transactions"])
        print(f"‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–∫–µ: {block_number}")
        print(f"        –•–µ—à –±–ª–æ–∫–∞: {hash_hex}")
        print(f"        –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∞: {timestamp}")
        print(f"        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –±–ª–æ–∫–µ: {transactions_number}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–æ–≤–∞–∏ÃÜ–¥–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ RPC. ")


if __name__ == "__main__":
    asyncio.run(main())
